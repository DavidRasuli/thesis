package DataModel;

import DateUtil.DateFormatting;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import java.time.LocalDateTime;

@DynamoDBTable(tableName="Items")
public class Item {

	private String ID;

	private LocalDateTime creationDate;

	private String name;

	private String alternativeName;

	private String type;

	private String category;

	@DynamoDBHashKey(attributeName="ID")
	@DynamoDBAutoGeneratedKey
	public String getID() {
		return ID;
	}

	@DynamoDBAttribute(attributeName="CreationDate")
	public String getCreationDate() {
		return DateFormatting.getFormattedDate(creationDate);
	}

	@DynamoDBAttribute(attributeName="Name")
	public String getName() {
		return name;
	}

	@DynamoDBAttribute(attributeName="AlternativeName")
	public String getAlternativeName() {
		return alternativeName;
	}

	@DynamoDBAttribute(attributeName="Type")
	public String getType() {
		return type;
	}

	@DynamoDBAttribute(attributeName="Category")
	public String getCategory() {
		return category;
	}

	public void setID(String ID) {
		this.ID = ID;
	}

	public void setCreationDate(String creationDate) {
		this.creationDate = DateFormatting.setToFormattedDate(creationDate);
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setAlternativeName(String alternativeName) {
		this.alternativeName = alternativeName;
	}

	public void setType(String type) {
		this.type = type;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	public Item( String name, String alternativeName, String type, String category) {
		this.creationDate = LocalDateTime.now();
		this.name = name;
		this.alternativeName = alternativeName;
		this.type = type;
		this.category = category;
	}

	public Item(){
		creationDate = LocalDateTime.now();
	}
}
