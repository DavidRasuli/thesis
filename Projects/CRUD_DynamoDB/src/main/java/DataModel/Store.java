package DataModel;

import DateUtil.DateFormatting;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import java.time.LocalDateTime;
import java.util.Date;

@DynamoDBTable(tableName="Stores")
public class Store {

	private String ID;

	private String addressID;

	private String name;

	private String brand;

	private LocalDateTime creationDate;

	private String websiteAddress;

	@DynamoDBHashKey(attributeName="ID")
	@DynamoDBAutoGeneratedKey
	public String getID() {
		return ID;
	}

	@DynamoDBAttribute(attributeName="AddressID")
	public String getAddressID() {
		return addressID;
	}

	@DynamoDBAttribute(attributeName="Name")
	public String getName() {
		return name;
	}

	@DynamoDBAttribute(attributeName="Brand")
	public String getBrand() {
		return brand;
	}

	@DynamoDBAttribute(attributeName="CreationDate")
	public String getCreationDate() {
		return DateFormatting.getFormattedDate(creationDate);
	}

	@DynamoDBAttribute(attributeName="WebsiteAddress")
	public String getWebsiteAddress() {
		return websiteAddress;
	}

	public void setID(String id) {
		this.ID = id;
	}

	public void setAddressID(String addressID) {
		addressID = addressID;
	}

	public void setName(String name) {
		name = name;
	}

	public void setBrand(String brand) {
		brand = brand;
	}

	public void setCreationDate(String creationDate) {
		this.creationDate = DateFormatting.setToFormattedDate(creationDate);
	}

	public void setWebsiteAddress(String websiteAddress) {
		websiteAddress = websiteAddress;
	}

	public
	Store(String addressID, String name, String brand, String websiteAddress) {
		this.addressID = addressID;
		this.name = name;
		this.brand = brand;
		this.creationDate = LocalDateTime.now();
		this.websiteAddress = websiteAddress;
	}

	public Store() {
		creationDate = LocalDateTime.now();
	}
}
